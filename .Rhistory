test  <- read.csv("../pml-testing.csv")
library(caret)
set.seed(7640)
load("testsetup.RData")
test2 <- test[,nameList] # new df with just relevant features repeated on test set
View(test)
nameList
nameList <- nameList[nameList!=classe]
nameList <- nameList[-length(nameList)]
nameList
test2 <- test[,nameList] # new df with just relevant features repeated on test set
View(test2)
test3 <- test2[,6:ncol(testing2)] # remove X and timestamps
test3 <- test2[,6:ncol(test2)] # remove X and timestamps
test3a <- test3[,naCols] # same for test set
naCols
naCols <- naCols[-length(naCols)] # remove classe from list
test3a <- test3[,naCols] # same for test set
testPre <- predict(preProc,test3a)
modFrf <- readRDS("../Results/modFrf.rds") # read saved model
predFrf <- predict(modFrf,newdata=testPre)
View(testPre)
preProc <- preProcess(train3a[,-ncol(train3a)],method=c("YeoJohnson","pca"),thresh=0.95)
train <- read.csv("../pml-training.csv")
test  <- read.csv("../pml-testing.csv")
library(caret)
set.seed(7640)
inTrain <- createResample(y=train$classe,times=1,list=FALSE)
training <- train[inTrain,]
testing <- train[-inTrain,]
nsv <- nearZeroVar(training,saveMetrics=TRUE)
namedf <- subset(nsv,nzv==FALSE) # find all the relevant features' rows
nameList <- row.names(namedf) # all the relevant names
training2 <- training[,nameList] # new df with just relevant features
training2$classe <- training$classe # add outcome
training3 <- training2[,6:ncol(training2)] # remove X and timestamps
naCols <- sapply(training3, function(x) {!any(is.na(x))}) # logical listing of those columnds w/o NAs
train3a <- training3[,naCols] # new set w/o NAs
preProc <- preProcess(train3a[,-ncol(train3a)],method=c("YeoJohnson","pca"),thresh=0.95)
save (preProc,file="../Results/preProc.RData")
load("../Results/preProc.RData")
testPre <- predict(preProc,test3a)
modFrf <- readRDS("../Results/modFrf.rds") # read saved model
predFrf <- predict(modFrf,newdata=testPre)
predFrf
pml_write_files = function(x){
n = length(x)
for(i in 1:n){
filename = paste0("../Results/problem_id_",i,".txt")
write.table(x[i],file=filename,quote=FALSE,row.names=FALSE,col.names=FALSE)
}
}
pml_write_files(preFrf)
pml_write_files(predFrf)
out <- paste0("The total number of non-zero variance variables is ", length(nameList), " out of ",(length(names(training2))-1), " original variables")
print(out)
out <- paste0("The total number of non-zero variance variables is ", length(nameList), " out of ",(length(names(training))-1), " original variables")
print(out)
length(row.names(testing))
qplot(PC16,PC7,col=train3a$classe,data=trainPre)
trainPre <- predict(preProc,train3a[,-ncol(train3a)])
qplot(PC16,PC7,col=train3a$classe,data=trainPre)
q()
